<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>temp2 on Everyday CS</title><link>https://virajbhatnagar.me/tags/temp2/</link><description>Recent content in temp2 on Everyday CS</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 19 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://virajbhatnagar.me/tags/temp2/index.xml" rel="self" type="application/rss+xml"/><item><title>Temp titlen temp title temp title temp title temp title temp title temp title</title><link>https://virajbhatnagar.me/temp-title-copy/</link><pubDate>Tue, 19 Sep 2023 00:00:00 +0000</pubDate><guid>https://virajbhatnagar.me/temp-title-copy/</guid><description>Sherlock Holmes &amp;amp; John Watson https://www.github.com/zerodha/nithinkamath.me/blob/develop/layouts/_default/list.html
class Solution { public int minDeletions(String s) { int[] count = new int[26]; for(char c : s.toCharArray()){ count[c - &amp;#39;a&amp;#39;]++; } PriorityQueue&amp;lt;Integer&amp;gt; pq = new PriorityQueue&amp;lt;&amp;gt;(Collections.reverseOrder()); for(int i: count){ if(i != 0) pq.add(i); } int last = -1; int ans = 0; while(!pq.isEmpty()){ if(last == -1){ last = pq.poll(); continue; } int current = pq.poll(); if(current == 0) continue; if(last == current){ pq.add(current - 1); ans++; }else{ last = current; } } return ans; } } XXXX</description></item><item><title>Temp titlen temp title temp title temp title temp title temp title temp title</title><link>https://virajbhatnagar.me/temp-title/</link><pubDate>Mon, 18 Sep 2023 00:00:00 +0000</pubDate><guid>https://virajbhatnagar.me/temp-title/</guid><description>Sherlock Holmes
public class Hello{ public static void main(String[] args){ System.out.println(&amp;#34;Hello World&amp;#34;); } } XXXX</description></item></channel></rss>